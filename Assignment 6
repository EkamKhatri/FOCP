#include <stdio.h>
#define PLAYER_X 'X'
#define PLAYER_O 'O'
#define EMPTY ' '
void initializeBoard(char board[3][3]) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            board[i][j] = EMPTY;
        }
    }
}
void printBoard(char board[3][3]) {
    printf("\n");
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf(" %c ", board[i][j]);
            if (j < 2) printf("|");
        }
        printf("\n");
        if (i < 2) printf("---|---|---\n");
    }
    printf("\n");
}
int checkWin(char board[3][3], char player) {
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return 1;
        }
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
            return 1;
        }
    }
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return 1;
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return 1;
    }
    return 0;
}
int isBoardFull(char board[3][3]) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == EMPTY) {
                return 0; 
            }
        }
    }
    return 1;  
}
void playerMove(char board[3][3], int playerNum) {
    int row, col;
    char player = (playerNum == 1) ? PLAYER_X : PLAYER_O;
    do {
        printf("Player %d, enter your move (row and column 0-2): ", playerNum);
        scanf("%d %d", &row, &col);
        if (row < 0 || row > 2 || col < 0 || col > 2 || board[row][col] != EMPTY) {
            printf("Invalid move. Try again.\n");
        } else {
            board[row][col] = player;
            break;
        }
    } while (1);
}
int main() {
    char board[3][3];
    int turn = 1;  
    int winner = 0;
    initializeBoard(board);
    printf("Welcome to Tic-Tac-Toe!\n");
    while (1) {
        printBoard(board);
        playerMove(board, turn);
        if (checkWin(board, PLAYER_X)) {
            printBoard(board);
            printf("Player 1 (X) wins!\n");
            break;
        } else if (checkWin(board, PLAYER_O)) {
            printBoard(board);
            printf("Player 2 (O) wins!\n");
            break;
        }
        if (isBoardFull(board)) {
            printBoard(board);
            printf("It's a tie!\n");
            break;
        }
        turn = (turn == 1) ? 2 : 1;
    }
    return 0;
}
