1. 
#include <stdio.h>
#include <math.h>
int isArmstrong(int num) {
    int originalNum = num, sum = 0, digits = 0;
    while (num != 0) {
        digits++;
        num /= 10;
    }
    num = originalNum;
    while (num != 0) {
        int digit = num % 10;
        sum += pow(digit, digits);
        num /= 10;
    }
    return (sum == originalNum);
}
int main() {
    int number;
    printf("Enter a number: ");
    scanf("%d", &number);

    if (isArmstrong(number)) {
        printf("%d is an Armstrong number.\n", number);
    } else {
        printf("%d is not an Armstrong number.\n", number);
    }
    return 0;
}

2.
#include <stdio.h>

int calculateHCF(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}
int main() {
    int num1, num2;
    printf("Enter two integers: ");
    scanf("%d %d", &num1, &num2);
    int hcf = calculateHCF(num1, num2);
    printf("The HCF of %d and %d is %d.\n", num1, num2, hcf);
    return 0;
}

3.
#include <stdio.h>
int subtract(int a, int b) {
    while (b != 0) {
        int borrow = (~a) & b;
        a = a ^ b;
        b = borrow << 1;
    }
    return a;
}
int main() {
    int num1, num2;
    printf("Enter two integers (a and b): ");
    scanf("%d %d", &num1, &num2);
    int result = subtract(num1, num2);
    printf("The result of %d - %d is %d.\n", num1, num2, result);
    return 0;
}

4.
#include <stdio.h>
void swapWithTemp(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
void swapWithArithmetic(int *a, int *b) {
    *a = *a + *b;
    *b = *a - *b;
    *a = *a - *b;
}
void swapWithBitwise(int *a, int *b) {
    *a = *a ^ *b;
    *b = *a ^ *b;
    *a = *a ^ *b;
}
void swapWithReference(int *a, int *b) {
    *a = *a * (*b);
    *b = *a / (*b);
    *a = *a / (*b);
}
int main() {
    int num1, num2;
    printf("Enter two integers: ");
    scanf("%d %d", &num1, &num2);
    printf("\nOriginal values: num1 = %d, num2 = %d\n", num1, num2);
    swapWithTemp(&num1, &num2);
    printf("\nAfter swapping using Method 1 (Temporary Variable): num1 = %d, num2 = %d", num1, num2);
    swapWithTemp(&num1, &num2);
    swapWithArithmetic(&num1, &num2);
    printf("\nAfter swapping using Method 2 (Arithmetic Operations): num1 = %d, num2 = %d", num1, num2);
    swapWithArithmetic(&num1, &num2);
    swapWithBitwise(&num1, &num2);
    printf("\nAfter swapping using Method 3 (Bitwise XOR): num1 = %d, num2 = %d", num1, num2);
    swapWithBitwise(&num1, &num2);
    swapWithReference(&num1, &num2);
    printf("\nAfter swapping using Method 4 (Multiplication and Division): num1 = %d, num2 = %d\n", num1, num2);
    return 0;
}

5.
#include <stdio.h>
int isPerfectNumber(int num) {
    int sum = 0;
    for (int i = 1; i <= num / 2; i++) {
        if (num % i == 0) {
            sum += i;
        }
    }
    return sum == num;
}
int main() {
    int number;
    printf("Enter a number: ");
    scanf("%d", &number);
    if (isPerfectNumber(number)) {
        printf("%d is a Perfect Number.\n", number);
    } else {
        printf("%d is not a Perfect Number.\n", number);
    }
    return 0;
}

6.
#include <stdio.h>
int main() {
    int x, y;
    printf("Enter the coordinates (x y): ");
    scanf("%d %d", &x, &y);
    if (x > 0 && y > 0) {
        printf("The coordinate point (%d, %d) lies in the First quadrant.\n", x, y);
    } else if (x < 0 && y > 0) {
        printf("The coordinate point (%d, %d) lies in the Second quadrant.\n", x, y);
    } else if (x < 0 && y < 0) {
        printf("The coordinate point (%d, %d) lies in the Third quadrant.\n", x, y);
    } else if (x > 0 && y < 0) {
        printf("The coordinate point (%d, %d) lies in the Fourth quadrant.\n", x, y);
    } else if (x == 0 && y != 0) {
        printf("The coordinate point (%d, %d) lies on the Y-axis.\n", x, y);
    } else if (y == 0 && x != 0) {
        printf("The coordinate point (%d, %d) lies on the X-axis.\n", x, y);
    } else {
        printf("The coordinate point (%d, %d) is at the origin.\n", x, y);
    }
    return 0;
}

7.
#include <stdio.h>
#include <math.h>
int binaryToDecimal(int binary) {
    int decimal = 0, base = 1, remainder;
    while (binary > 0) {
        remainder = binary % 10; 
        decimal += remainder * base;
        base *= 2; 
        binary /= 10; 
    }
    return decimal;
}
int decimalToBinary(int decimal) {
    int binary = 0, base = 1, remainder;
    while (decimal > 0) {
        remainder = decimal % 2; 
        binary += remainder * base;
        base *= 10; 
        decimal /= 2; 
    }
    return binary;
}
int main() {
    int choice, number;
    printf("Choose an option:\n");
    printf("1. Binary to Decimal Conversion\n");
    printf("2. Decimal to Binary Conversion\n");
    printf("Enter your choice (1 or 2): ");
    scanf("%d", &choice);
    if (choice == 1) {
        printf("Enter a binary number: ");
        scanf("%d", &number);
        int result = binaryToDecimal(number);
        printf("The decimal equivalent of %d is %d.\n", number, result);
    } else if (choice == 2) {
        printf("Enter a decimal number: ");
        scanf("%d", &number);
        int result = decimalToBinary(number);
        printf("The binary equivalent of %d is %d.\n", number, result);
    } else {
        printf("Invalid choice! Please select 1 or 2.\n");
    }
    return 0;
}

8.
#include <stdio.h>
int main() {
    int n = 5; 
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            if ((i + j) % 2 == 0) {
                printf("1");
            } else {
                printf("0");
            }
        }
        printf("\n"); 
    }

    return 0;
}

9.
#include <stdio.h>
int main() {
    int n = 5; 
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            if ((j % 2) == 0) {
                printf("1");
            } else {
                printf("0");
            }
        }
        for (int j = 1; j <= (2 * (n - i)); j++) {
            printf(" ");
        }
        for (int j = 1; j <= i; j++) {
            if ((j % 2) == 0) {
                printf("1");
            } else {
                printf("0");
            }
        }
        printf("\n");
    }

    return 0;
}

10.
#include <stdio.h>
long factorial(int n) {
    long fact = 1;
    for (int i = 1; i <= n; i++) {
        fact *= i;
    }
    return fact;
}
void printPascalsTriangle(int rows) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j <= i; j++) {
            printf("%ld ", factorial(i) / (factorial(j) * factorial(i - j)));
        }
        printf("\n");
    }
}
int main() {
    int rows;
    printf("Enter the number of rows: ");
    scanf("%d", &rows);
    printPascalsTriangle(rows);
    return 0;
}


